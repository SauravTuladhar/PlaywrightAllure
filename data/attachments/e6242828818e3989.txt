# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Contact testcases >> Contact Edit test
- Location: /home/runner/work/PlaywrightAllure/PlaywrightAllure/tests/contact/contact.spec.js:28:9

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)

Locator: locator('//p[contains(text(),"Click on any contact to view the Contact Details")]')
Expected string: "Click on any contact to view the Contact Details..."
Received: <element(s) not found>
Call log:
  - expect.toHaveText with timeout 5000ms
  - waiting for locator('//p[contains(text(),"Click on any contact to view the Contact Details")]')

    at LoginPage.verifyValidLogin (/home/runner/work/PlaywrightAllure/PlaywrightAllure/pageOjects/login.po.js:23:39)
    at /home/runner/work/PlaywrightAllure/PlaywrightAllure/tests/contact/contact.spec.js:13:5
```

# Test source

```ts
   1 | const { expect } = require("@playwright/test");
   2 |
   3 | exports.LoginPage = class LoginPage {
   4 |     constructor(page) {
   5 |         this.page = page;
   6 |         this.usernameInput = '#email';
   7 |         this.passwordInput = '//input[@placeholder="Password"]';
   8 |         this.loginButton = '//button[@id="submit"]';
   9 |         this.logOut = '//button[@id="logout"]';
  10 |         this.loginValidation = '//p[contains(text(),"Click on any contact to view the Contact Details")]';
  11 |         this.alertMessage = '//span[@id="error"]';
  12 |     }
  13 |
  14 |     async login(username, password) {
  15 |         await this.page.locator(this.usernameInput).fill(username);
  16 |         await this.page.locator(this.passwordInput).fill(password);
  17 |         await this.page.locator(this.loginButton).click();
  18 |     }
  19 |
  20 |     async verifyValidLogin() {
  21 |         const LoginValidation = await this.page.locator(this.loginValidation);
  22 |         expect(this.logOut).toBeVisible;
> 23 |         await expect(LoginValidation).toHaveText('Click on any contact to view the Contact Details...');
     |                                       ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)
  24 |     }
  25 |
  26 |     async verifyInvalidLogin() {
  27 |         const InvalidLogin = await this.page.locator(this.alertMessage);
  28 |         await expect(InvalidLogin).toHaveText('Incorrect username or password');
  29 |     }
  30 | }
```